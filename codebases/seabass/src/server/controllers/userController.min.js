import asyncHandler from"../middleware/asyncHandler.min.js";import User from"../models/userModel.min.js";const getUsers=asyncHandler((async(s,e)=>{const a=await User.find({});e.json(a)})),getUserById=asyncHandler((async(s,e)=>{const a=await User.findById(s.params.id);if(!a)throw e.status(404),new Error("user not found");e.json(a)})),getUserByUsername=asyncHandler((async(s,e)=>{const a=await User.findOne({username:{$eq:s.params.username}});if(!a)throw e.status(404),new Error("user not found");e.json(a)})),getUserByEmail=asyncHandler((async(s,e)=>{const a=await User.findOne({email:{$eq:s.params.email}});if(!a)throw e.status(404),new Error("user not found");e.json(a)})),updateUserById=asyncHandler((async(s,e)=>{const{username:a,email:r,password:n,permissions:i,picture:t,display_name:o,bio:d}=s.body,m=await User.findById(s.params.id);if(!m)throw e.status(404),new Error("user not found");{m.username=a,m.email=r,m.password=n,m.permissions=i,m.picture=t,m.display_name=o,m.bio=d;const s=await m.save();e.json(s)}})),updateUserBioById=asyncHandler((async(s,e)=>{const{bio:a}=s.body,r=await User.findById(s.params.id);if(!r)throw e.status(404),new Error("user not found");{r.bio=a;const s=await r.save();e.json(s)}})),updateUserDisplayNameById=asyncHandler((async(s,e)=>{const{display_name:a}=s.body,r=await User.findById(s.params.id);if(!r)throw e.status(404),new Error("user not found");{r.display_name=a;const s=await r.save();e.json(s)}})),deleteUserById=asyncHandler((async(s,e)=>{const a=await User.findById(s.params.id);if(!a)throw e.status(404),new Error("user not found");await a.remove(),e.json({message:"user removed"})})),createUser=asyncHandler((async(s,e)=>{const{username:a,email:r,password:n,permissions:i,picture:t,display_name:o,bio:d}=s.body;await User.create({username:a,email:r,password:n,permissions:i,picture:t,display_name:o,bio:d}).then((s=>{if(!s)throw e.status(400),new Error("invalid user data");e.status(201).json({_id:s._id,username:s.username,email:s.email,password:s.password,permissions:s.permissions,picture:s.picture,display_name:s.display_name,bio:s.bio})}))}));export{getUsers,getUserById,getUserByUsername,getUserByEmail,updateUserById,updateUserBioById,updateUserDisplayNameById,deleteUserById,createUser};