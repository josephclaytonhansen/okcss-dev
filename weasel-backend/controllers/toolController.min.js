import asyncHandler from"../middleware/asyncHandler.min.js";import Tool from"../models/tool.js";const getTools=asyncHandler((async(o,s)=>{const a=await Tool.find();s.json(a)})),getToolById=asyncHandler((async(o,s)=>{const a=await Tool.findById(o.params.id);s.json(a)})),createTool=asyncHandler((async(o,s)=>{const a=await Tool.create(o.body);s.json(a)})),updateTool=asyncHandler((async(o,s)=>{const a=await Tool.findById(o.params.id);if(!a)throw s.status(404),new Error("Tool not found");{a.ward=o.body.ward||a.ward,a.stri=o.body.stri||a.stri,a.sbmr=o.body.sbmr||a.sbmr,a.sbu=o.body.sbu||a.sbu,a.vsrc=o.body.vsrc||a.vsrc,a.vtpc=o.body.vtpc||a.vtpc,a.sutftm=o.body.sutftm||a.sutftm,a.vso=o.body.vso||a.vso;const t=await a.save();s.json(t)}})),deleteTool=asyncHandler((async(o,s)=>{const a=await Tool.findById(o.params.id);if(!a)throw s.status(404),new Error("Tool not found");await a.remove(),s.json({message:"Tool removed"})}));export{getTools,getToolById,createTool,updateTool,deleteTool};