import asyncHandler from"../middleware/asyncHandler.min.js";import Person from"../models/Person.js";const getPersons=asyncHandler((async(n,a)=>{const o=await Person.find();a.json(o)})),getPersonById=asyncHandler((async(n,a)=>{const o=await Person.findById(n.params.id);a.json(o)})),getPersonsByWard=asyncHandler((async(n,a)=>{const o=await Person.find({ward:n.params.ward});a.json(o)})),getPersonsByWardAndOrganization=asyncHandler((async(n,a)=>{const o=await Person.find({ward:n.params.ward,category:n.params.organization});a.json(o)})),createPerson=asyncHandler((async(n,a)=>{const o=await Person.create(n.body);a.json(o)})),updatePerson=asyncHandler((async(n,a)=>{const o=await Person.findById(n.params.id);if(!o)throw a.status(404),new Error("Person not found");{o.ward=n.body.ward||o.ward,o.name=n.body.name||o.name,o.image=n.body.image||o.image,o.position=n.body.position||o.position,o.email=n.body.email||o.email,o.phone=n.body.phone||o.phone,o.size=n.body.size||o.size,o.organization=n.body.organization||o.organization,o.bio=n.body.bio||o.bio;const e=await o.save();a.json(e)}})),deletePerson=asyncHandler((async(n,a)=>{const o=await Person.findById(n.params.id);if(!o)throw a.status(404),new Error("Person not found");await o.remove(),a.json({message:"Person removed"})}));export{getPersons,getPersonById,getPersonsByWard,getPersonsByWardAndOrganization,createPerson,updatePerson,deletePerson};