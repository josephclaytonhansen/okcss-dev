import asyncHandler from"../middleware/asyncHandler.min.js";import Event from"../models/Event.js";const getEvents=asyncHandler((async(t,e)=>{const n=await Event.find();e.json(n)})),getEventById=asyncHandler((async(t,e)=>{const n=await Event.findById(t.params.id);e.json(n)})),createEvent=asyncHandler((async(t,e)=>{const n=await Event.create(t.body);e.json(n)})),updateEvent=asyncHandler((async(t,e)=>{const n=await Event.findById(t.params.id);if(!n)throw e.status(404),new Error("Event not found");{n.ward=t.body.ward||n.ward,n.time=t.body.time||n.time,n.title=t.body.title||n.title,n.description=t.body.description||n.description,n.color=t.body.color||n.color,n.category=t.body.category||n.category;const a=await n.save();e.json(a)}})),deleteEvent=asyncHandler((async(t,e)=>{const n=await Event.findById(t.params.id);if(!n)throw e.status(404),new Error("Event not found");await n.remove(),e.json({message:"Event removed"})}));export{getEvents,getEventById,createEvent,updateEvent,deleteEvent};