import asyncHandler from"../middleware/asyncHandler.min.js";import User from"../models/user.js";import{createToken,verifyToken,createAuth,verifyAuth}from"./jwt.js";const userLoginByEmail=asyncHandler((async(e,a)=>{const r=await User.findOne({email:{$eq:e.body.email}});if(!r||!r.validPassword(e.body.password))throw a.status(401),new Error("Invalid credentials");{let e=createToken(r.email);a.json({auth_token:e,email:r.email,organization:r.organization,ward:r.ward})}})),verifyTokenUser=asyncHandler((async(e,a,r)=>{const s=e.body.token||e.query.token,o=e.body.user||e.query.user;let n=verifyToken(s),i=JSON.parse(o);if(n.email!==i.user.email||n.ward!==i.user.ward||n.organization!==i.user.organization)throw a.status(401),new Error("Invalid credentials");a.status(200),a.json({message:"success"})})),createUser=asyncHandler((async(e,a)=>{const r=new User({email:e.body.email,password:e.body.password,ward:e.body.ward,organization:e.body.organization});await r.save(),a.status(201).json(r)}));export{userLoginByEmail,verifyTokenUser,createUser};