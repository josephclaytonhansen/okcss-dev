import db from"./src/server/mongo.js";import express from"express";import cors from"cors";import dotenv from"dotenv";import fs from"fs";import{default as totp}from"totp-generator";import QRCode from"qrcode";import{default as base32}from"base32";import nunjucks from"nunjucks";import{default as nunjuckDate}from"nunjucks-date";import rate_limit from"express-rate-limit";import axios from"axios";import User from"./src/server/models/userModel.min.js";import page_routes from"./src/server/routes/pageRoutes.min.js";import post_routes from"./src/server/routes/postRoutes.min.js";import user_routes from"./src/server/routes/userRoutes.min.js";import comment_routes from"./src/server/routes/commentRoutes.min.js";import category_routes from"./src/server/routes/categoriesRoutes.min.js";import static_routes from"./src/server/routes/staticRoutes.min.js";import upload_routes from"./src/server/routes/uploadRoutes.min.js";import base_routes from"./src/server/routes/baseRoutes.min.js";import session from"express-session";import passport from"passport";import Strategy from"passport-google-oauth20";import{default as connectMongoDBSession}from"connect-mongodb-session";import cookieParser from"cookie-parser";const app=express(),router=express.Router();app.use(express.urlencoded({extended:!1})),app.use(cookieParser(process.env.COOKIE_PARSER_SECRET));const MongoDBStore=connectMongoDBSession(session),store=new MongoDBStore({uri:process.env.MONGO_STRING,databaseName:"development",collection:"sessions"});app.use(session({maxAge:18e6,secret:process.env.SESSION_SECRET,resave:!1,saveUninitialized:!0,cookie:{secure:"production"==process.env.ENV,maxAge:18e6},store:store})),app.use(passport.session()),app.use(passport.initialize()),passport.serializeUser((async function(e,s){s(null,e.id)})),passport.deserializeUser((function(e,s){User.findById(e).then((e=>{s(null,e)}))})),dotenv.config(),app.use(express.json()),app.use(express.urlencoded({extended:!1})),passport.use(new Strategy({clientID:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,callbackURL:"/oauth2/redirect/google",scope:["profile","email"]},(async(e,s,o,t)=>{const r=await User.findOne({googleId:o.id});if(r)return t(null,r);return t(null,await User.create({googleId:o.id,displayName:o.displayName,firstName:o.name.givenName,lastName:o.name.familyName,image:o.photos[0].value,email:o.emails[0].value,permissions:"worm"}))})));const corsOptions={origin:process.env.ORIGIN,credentials:!0,optionSuccessStatus:200};app.use(cors(corsOptions)),app.options("*",cors(corsOptions));const nenv=nunjucks.configure(["src/views","src/includes","src/assets"],{autoescape:!0,express:app,watch:!0});nunjuckDate.setDefaultFormat("MMM Do, h:mm a"),nunjuckDate.install(nenv);const limiter=rate_limit({windowMs:9e5,max:400,standardHeaders:!0,legacyHeaders:!1});"production"==process.env.ENV&&app.use(limiter),app.use("/page",page_routes),app.use("/post",post_routes),app.use("/user",user_routes),app.use("/comment",comment_routes),app.use("/category",category_routes),app.use("/",static_routes),app.use("/",upload_routes),app.use("/",base_routes),router.get("/login/federated/google",passport.authenticate("google",{scope:["profile email"]})),router.get("/login-na",((e,s)=>{s.render("login.html",{root:".",message:"You are not authorized.\nContact the database admin to gain access"})})),router.get("/logout",(async(e,s,o)=>{e.session.destroy(),await e.logout((function(e){if(e)return o(e)})),s.redirect("/login")})),router.get("/",passport.authenticate("google",{successRedirect:"/dashboard",failureRedirect:"/login"})),router.get("/oauth2/redirect/google",passport.authenticate("google",{successRedirect:"/totp-challenge",failureRedirect:"/login"})),router.get("/totp-challenge",((e,s)=>{if(e.session.passport.user){let o=e.session.passport.user,t=!1,r="";User.findById(o).then((o=>{if(t=o.totp,r=o.totpSecret,e.session.passport.email=o.email,e.session.passport.display_name=o.display_name,e.session.passport.username=o.username,e.session.passport.picture=o.picture,e.session.passport.bio=o.bio,1==t){totp(r);s.render("totp-challenge.html",{root:"."})}else{let e=o.email+process.env.TOTP_SECRET;e=base32.encode(e).toString().replace(/0/g,"O").replace(/1/g,"I").replace(/8/g,"B").replace(/9/g,"P").toUpperCase().replace(/[^A-Z2-7=]/g,"");let t="otpauth://totp/OklahomaCitySouthStake:"+o+"?secret="+e+"&issuer=OklahomaCitySouthStake";QRCode.toDataURL(t,{errorCorrectionLevel:"L",type:"image/png"}).then((e=>{s.render("totp.html",{qr:e,root:"."})}))}}))}})),router.post("/totp-verify",((e,s)=>{let o=e.session.passport.user,t=o+process.env.TOTP_SECRET;t=base32.encode(t).toString().replace(/0/g,"O").replace(/1/g,"I").replace(/8/g,"B").replace(/9/g,"P").toUpperCase().replace(/[^A-Z2-7=]/g,""),e.body.code==totp(t)?User.findByIdAndUpdate(o,{totp:!0,totpSecret:t}).then((e=>{s.redirect("/logged-in")})):s.redirect("/totp-challenge")})),router.get("/logged-in",((e,s)=>{let o=e.session.passport.user;User.findById(o).then((o=>{e.session.passport.email=o.email,e.session.passport.display_name=o.display_name,e.session.passport.username=o.username,e.session.passport.picture=o.picture,e.session.passport.bio=o.bio,e.session.passport.permissions=o.permissions,!1===("worm"!==e.session.passport.permissions)?s.redirect("/login"):s.redirect("/dashboard")}))})),router.get("/edit/post/:id",(async(e,s)=>{if(e.session.passport&&"worm"!=e.session.passport.permissions){let o=e.session.passport.user;const t=e.params.id;let r=[];const a=axios.get("http://localhost:5920/category/").then((e=>e.data));let p=axios.get("http://localhost:5920/user/").then((e=>e.data.map((e=>({name:e.display_name,id:e._id})))));for(let e=0;e<a.length;e++)r.push(a[e].name);let i=null,n=[];i=await axios.get("http://localhost:5920/post/"),i=i.data;for(let e=0;e<i.length;e++)n.push(i[e]._id);let l=n.indexOf(t);-1==l?s.redirect("/dashboard"):s.render("editor.html",{root:".",post:axios.get("http://localhost:5920/post/id/"+n[l]).then((e=>e.data)),type:"post",user:o,username:"served_from_express",all_categories:r,all_authors:p})}else s.redirect("/login-na")})),router.get("/edit/page/:id",(async(e,s)=>{if(e.session.passport&&"worm"!=e.session.passport.permissions){let o=e.session.passport.user;User.findById(o).then((o=>{const t=e.params.id;let r=[];const a=axios.get("http://localhost:5920/category/").then((e=>e.data));let p=axios.get("http://localhost:5920/user/").then((e=>e.data.map((e=>({name:e.display_name,id:e._id})))));for(let e=0;e<a.length;e++)r.push(a[e].name);let i=axios.get("http://localhost:5920/page/").then((e=>e.data)),n=[];for(let e=0;e<i.length;e++)n.push(i[e]._id);let l=n.indexOf(t);-1==l?s.redirect("/dashboard"):s.render("editor.html",{root:".",post:axios.get("http://localhost:5920/page/id/"+n[l]).then((e=>e.data)),type:"page",user:o,all_categories:r,all_authors:p})})).catch((e=>{s.redirect("/login")}))}else s.redirect("/login-na")})),router.get("/login",((e,s)=>{s.render("login.html",{root:"."})})),app.use("/",router),app.listen(5920,(()=>{}));